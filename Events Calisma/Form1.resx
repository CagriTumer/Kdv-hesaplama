<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAARJSURBVHhe7ZtPTBRXHMdnZnfnzTY26cF46cXEWA89NabMLCQCCdBEA2gL0j92s8wM0Na0QLVR
        MFA0Ak2DFQhCGxBqawxR7Eoh4gGbatKm0ITEi6btrY1tNBpt0h5qE399780bsuvOurtlCfPM+yXfsDv7
        fn++H2Z3Z3dnJBF5jqci1guaYZathkht1safgXS7XDMsWF2ZZayd/wIPFyNDopf2ghpry6tITQYgxtr5
        L1wAodYjIC3N5lWkJtcA5CvnQTkznpXkq+dT8rkHgHa2MAOZhV5uScnnG8DCNGgRG7RCG9S3Dz9WZI1W
        aIG0+HVSDa4BKF+cpMOr0XaQ7l17rMgaslY5fTKpBrcA5Mvnlnf/4NjnnqYTFRwdp2tRdTPNTQcAFZlb
        kGG/F45En6XN/RCJAOT5s/Tti+7SxNBrB0C6veRpOkl4DVlLzRbhp0z0AMjfTi0DCBvWtBaxfnRg0PvD
        rP3aRyKAwPCwYwIDCH3QC/KvC96GPST/tgihgx8vwwuMDCfsAY7wUaF7e4K1X/tIAnDiBB0wdKjP02Q2
        IrmkBqnlAiipewMmP6mCoe5dnADoOOZpLhuRXFIjEcDoR9Xw16Uy+pfcxxIAWPu1DwFAAMgOgDIXB9Xu
        BG1bE2jFTaA2fAjKpQsp655IAMHBT93BUxQc/CxpLVcAwhGrAOlWnAyVDoAyP+MMXdTwMNA3ANJ3carg
        sX66jTymfDPDDwBU2LgJH5V14iF+YsNQpQOgNh+l24I9eBs7xHUV7Hbe89XWbn8DeHpr43qk23s13foe
        N6f/NaKN5TEo3r2H3k4HAFU6nwnkuckUAGQbeQxV4Y/CvgNQEtOQYVXiZmex/mGNYUNxPUSbXoWpgUq4
        f7F8eai0AGr20W1K/MsUAEr8NH0M1ez3DwBU0PCcZtgjuMmfrBlPuos1qb7Y8Dyzk1toulmKC/Bo/FH9
        jXSzgtnKMkreWYcT/yAFQtYQyGM3QJq6nR+du+W9Pc+SR69DqH7IhXAHP42fYe4yB06wSaJag1+RPYpz
        IwxbfcV57UCG+RazlznChjlAkgLt+OjMqzBHCrZ9RQHk9MUJTpigALrmPIvyJOKBeCGemL3MIQAIAAKA
        ACAA+AnA5E0IRY+DWtebs9AO55cmrgEo/YuuiZWIYwDHf6AmCna/CfMXtuektiM1Tw6AivrX4eEvpTnp
        1HiVACAACAACgAAgAAgAAoAAwOxlDgFAAPAngBWKXwDyxM+ASt/1MpWL+AWwEhEPAoAAIAAIAAJAbgDs
        MQqgc8azKE8KdLAz0wxrlNnLHBjAIZJETjDwKsqTQrFBB0DEamP2MgfSY5tx0r/kOp9A56xnYR4U6Jh1
        rlUyrAfklD5mL7vQDLOdksNCZe+DWteT8quLf9VDZ3bnD+v2QWYrt8C7jYn1u1uIQ93UdLue2fmfUVsb
        IKea4T3C84Jmv8o5Pa5LYS5EeIck/QdGz/47/ayUoQAAAABJRU5ErkJggg==
</value>
  </data>
</root>